<% provide(:title, '案件情報更新') %>
<% provide(:button_text, '更新確認') %>

<script>

  // 「更新確認」ボタン時のバリデーションチェック
  function check() {

    var validationCheck = true;

    // 案件名
    oneCheck($('#projectName').val(), "案件名");
    // 案件内容
    oneCheck($('#content').val(), "案件内容");
    // 作業場所
    oneCheck($('#workingPlace').val(), "作業場所");
    // 単価(両方未入力はNG)
    if(($('#priceMin').val() == '' || $('#priceMin').val() == null)
        && ($('#priceMax').val() == '' || $('#priceMax').val() == null)) {
      alert("単価はどちらか一方は入力してください。");
      validationCheck = false;
    } else {
      // 両方入力の場合は比較
      if(($('#priceMin').val() != '' && $('#priceMin').val() != null)
        && ($('#priceMax').val() != '' && $('#priceMax').val() != null)) {
        twoCheck($('#priceMin').val(), $('#priceMax').val(), "単価");
      }
    }
    // 精算幅(両方入力以外はNG)
    if(($('#hourMin').val() == '' || $('#hourMin').val() == null)
      || ($('#hourMax').val() == '' || $('#hourMax').val() == null)) {
      alert("精算幅は両方入力してください。");
      validationCheck = false;
    } else {
      twoCheck($('#hourMin').val(), $('#hourMax').val(), "精算幅");
    }
    // 案件開始日
    threeCheck($('[name=start_year] option:selected').val(),
      $('[name=start_month] option:selected').val(),
        $('[name=start_day] option:selected').val(), "案件開始日");
    // 案件終了日(必須ではない)
    var endYear = $('[name=end_year] option:selected').val();
    var endMonth = $('[name=end_month] option:selected').val();
    var endDay = $('[name=end_day] option:selected').val();
    // 案件終了日はすべて空かすべて入力されている場合
    if(
        (endYear != '' && endYear != null) &&
          (endMonth != '' && endMonth != null) &&
            (endDay != '' && endDay != null)
      ) {
        if(!isDate(endYear+"/"+endMonth+"/"+endDay)){
          alert("案件終了予定日を正しい日付にしてください");
          validationCheck = false;
        }
    } else if(
        (endYear == '' || endYear == null) &&
          (endMonth == '' || endMonth == null) &&
            (endDay == '' || endDay == null)
      ) {
    } else {
      alert("案件終了予定日はすべて空かすべて入力されているかにしてください。");
      validationCheck = false;
    }
    // 時間
    var timeFromHour = $('[name=time_from_hour] option:selected').val();
    var timeFromMinutes = $('[name=time_from_minites] option:selected').val();
    var timeToHour = $('[name=time_to_hour] option:selected').val();
    var timeToMinutes = $('[name=time_to_minites] option:selected').val();
    // 時間はすべて空かすべて入力されている以外の場合はNG
    twoCheck(timeFromHour, timeFromMinutes, "時間(From)");
    twoCheck(timeToHour, timeToMinutes, "時間(To)");
    // 必須スキル(少なくとも1つは必要)
    if($('#mustSkill .btn').length < 1) {
      alert("必須スキルは必ず選択してください");
      validationCheck = false;
    }
    // 参画メンバー
    var table = $('#joinAbleFlame .new:visible');
    var hash = {};// 格納用ハッシュ
    for(let i = 0 ; i < table.length ; i++) {
      var selectValue = $(table[i]).find('select').val();
      var inputValue = $(table[i]).find('input').val();
      // 参画メンバーと参画開始予定日のどちらかしか入力されてない場合
      if(selectValue && !inputValue) {
        var name = $(table[i]).find('option[value='+selectValue+']').text();
        alert(name + 'さんの参画開始予定日を選択してください');
        validationCheck = false;
        break;
      } else if(!selectValue && inputValue) {
        alert(($('table#withMember').length+i+1) + '行目の参画メンバーを選択してください');
        validationCheck = false;
        break;
      }
      // hashに参画メンバーと参画開始予定日を追加(両方入力ある場合)
      if(selectValue && inputValue) hash[selectValue] = inputValue;
    }

    // バリデーション成功時に上記追加されたhash内からhiddenパラメータに設定
    if(validationCheck) {
      for(var h in hash) {
        $('#joinAbleFlame').append('<input type="hidden" name="joinAble[' + h + ']" value="' + hash[h] + '">');
      }
      // 既存の参画メンバーが存在する場合
      for(var i = 0; i < $('table#withMember').length; i++) {
        var id = $('table#withMember').eq(i).find('input[name="alreadyId"]').val();
        var date = $('table#withMember').eq(i).find('input[name="alreadyDate"]').val();
        $('#joinAbleFlame').append('<input type="hidden" name="joinAbleAlready[' + id + ']" value="' + date + '">');
      }
    }

    return validationCheck;

    // 1個の項目に必須かチェック
    function oneCheck(value, name) {

      if(value == '' || value == null) {
        alert(name + "は必須項目です");
        validationCheck = false;
      }
    }

    // 2個の項目(例えば単価や精算幅)チェック
    function twoCheck(value1, value2, name) {

      if(name.indexOf('時間') != -1) {
        // 両方入力か両方未入力以外NG
        if((value1 != '' && value1 != null) && (value2 != '' && value2 != null)) {
        } else if((value1 == '' || value1 == null) && (value2 == '' || value2 == null)) {
        } else {
          alert(name + "はすべて空かすべて入力されているかにしてください。");
          validationCheck = false;
        }
      } else {
        if(value1 > value2) {
          if(name == "単価") {
            alert(name + "は以下のように入力してください。\n"
                    + value2 + " 円　～　 " + value1 + " 円");
          } else if (name == "精算幅") {
            alert(name + "は以下のように入力してください。\n"
                    + value2 + " H　～　 " + value1 + " H");
          }
          validationCheck = false;
        }
      }
    }

    // 3個(例えば年月日)の項目に必須かチェック
    function threeCheck(value1, value2, value3, name) {

      var flag = true;

      if(value1 == '' || value1 == null) {
        flag = false;
      } else if(value2 == '' || value2 == null) {
        flag = false;
      } else if(value3 == '' || value3 == null) {
        flag = false;
      }

      if(!flag) {
        alert(name + "は必須項目です");
        validationCheck = false;
      } else {
        if(!isDate(value1+"/"+value2+"/"+value3)) {
          alert(name + "を正しい日付にしてください");
          validationCheck = false;
        }
      }
    }

    // 日付バリデーション
    function isDate(strDate){
      // 空文字は無視
      if(strDate == ""){
        return true;
      }
      // 年/月/日の形式のみ許容する
      if(!strDate.match(/^\d{4}\/\d{1,2}\/\d{1,2}$/)){
        return false;
      } 

      // 日付変換された日付が入力値と同じ事を確認
      // new Date()の引数に不正な日付が入力された場合、
      // 相当する日付に変換されてしまうため
      var date = new Date(strDate);  
      if(date.getFullYear() !=  strDate.split("/")[0] 
        || date.getMonth() != strDate.split("/")[1] - 1 
        || date.getDate() != strDate.split("/")[2]
      ){
        return false;
      }
      return true;
    }

  }

  // 戻るボタンでも効くように
  $(document).ready(

    function(){

      var copy = $('table.new').clone(true); // コピー用
      var selectEmployeeNumber = []; // 選択した参画メンバーリスト
      var backup = $('#joinAbleFlame table.new').clone(true); // 復元用
      // 参画メンバー枠がない(既存の参画メンバーがいない場合)
      if($('#joinAbleFlame table#withMember').length == 0) $('table.new').css('display','');
      // 起動時に既存の参画メンバーが1人しかいない場合は削除ボタンを非活性にする
      if($('table#withMember').length == 1) $('table#withMember div#del').attr('disabled', true);

      // スキルボタン(追加ボタン以外)押下 → そのスキル削除
      $(document).on('click','#mustSkill .btn:not(#addMust), #wantSkill .btn:not(#addWant)',
        function() {
          // hiddenパラメータも削除
          $(this).find().remove();
          $(this).remove();
        }
      );

      // スキル選択時
      $('#mustSelect, #wantSelect').on("change",
        function() {
          var id = '#'+$(this).attr('id');
          var add = $('<div class="btn btn-primary" style="margin-right:5px;">'+$(id+' option:selected').text()+'</div>');
          // 選択したスキルを追加
          if(id.indexOf('must') != -1) { // 必須スキル
            var skill = 'must';
          } else if(id.indexOf('want') != -1) { // 尚可スキル
            var skill = 'want';
          }
          $('#'+skill+'Skill').append(add);
          add.append('<input type="hidden" name="'+skill+'Skill[]" value='+$(id+' option:selected').val()+'>');
          // 未選択の状態にし(初期化)、プルダウンを隠す
          $(this).val("");
          $(this).parent().css('display','none');
        }
      );

      // 追加ボタン押下 → スキルプルダウン追加
      $('#addMust, #addWant').on("click",
        function(){
          // 必須ボタン押下
          if($(this).text() == '必須スキル追加') {
            $('td#must #select').css('display','block');
          // 尚可ボタン押下
          } else if($(this).text() == '尚可スキル追加') {
            $('td#want #select').css('display','block');
          }
        }
      );

　    // 参画メンバー追加ボタン
      $(function(){
        $("#joinAbleButton").on("click", function() {
          $(this).next().slideToggle();
        });
      });

      // 参画メンバー枠追加ボタン
      $(function(){
        $("#add").on("click", function() {
          // 先に非活性解除
          $('#joinAbleFlame table div#del').attr('disabled', false);
          // デフォルト行をコピー
          copyClone = copy.clone();
          // デフォルトで「display:none;」が付与されているので解除
          copyClone.css('display', '');
          $(copyClone).find('#del').attr('disabled', false);
          $(this).parent().append(copyClone);
        });
      });

      // 参画メンバープルダウンが選択された場合(追加されたプルダウンも適用)
      $(document).on('change','#joinAbleEngineer',function(){
        // 表示されているプルダウンの差し替え処理
        replacePulldown(backup, $('table.new:visible'), copy, selectEmployeeNumber);
        // 差し替え後に選択した値をリストに格納
        selectEmployeeNumber.push($(this).val());
      });

      // 削除ボタン
      $(document).on('click','div#del',function(){
        // 非活性の削除ボタンは削除できない
        if(!$('div#del').attr('disabled')) {
          $(this).parent().parent().parent().parent().remove();
          // 枠が1個以下の場合は削除ボタンを押せないようにする(非活性)
          if($('#joinAbleFlame table:visible').length <= 1) {
            $('#joinAbleFlame table div#del').attr('disabled', true);
          }
        }
      });

      function replacePulldown(pulldown, table, copy, list) {
        var selectedList = getAllValue(table); // 現在選択されている値のリスト
        var diff = [];
        diff[0] = selectedList.filter(i => list.indexOf(i) == -1) // selectedList - list
        diff[1] = list.filter(i => selectedList.indexOf(i) == -1); // list - selectedList
        for(let i = 0; i < table.length; i++) {
          var selected = table.eq(i).find('option:selected').val(); // 現在選択している値
          // 選択肢を全て取得
          var pulldownList = $.map(table.eq(i).find('option'),
            function(option) {
              return option.value;
            }
          );
          // 削除
          $.each(diff[0],
            function(index, val) {
              // 選択されている値以外の選択肢を削除
              if(selected != val) table.eq(i).find('option[value='+val+']').remove();
              copy.find('option[value='+val+']').remove();
            }
          );
          // 復活
          $.each(diff[1],
            function(index, val) {
              // 同じプルダウンで選択肢を変えた場合は、変更前の選択肢を削除
              if(pulldownList.includes(val)) table.eq(i).find('option[value='+val+']').remove();
              var add = table.eq(i).find('#joinAbleEngineer');
              var addIndex = getIndexSelectedValue(add, getNextValue(add,val));
              if(addIndex == 0) { // 末尾
                add.append($("<option></option>").val(val).text(getNameFromPulldown(pulldown, val)));
              } else {
                add.find('option').eq(addIndex).before($('<option>').html(getNameFromPulldown(pulldown, val)).val(val));
              }
              // 追加用も復元
              if(!copy.find('option[value='+val+']').length) {
                var copyIndex = getIndexSelectedValue(copy, getNextValue(add,val));
                if(copyIndex == 0) { // 末尾
                  copy.find('#joinAbleEngineer').append($("<option></option>").val(val).text(getNameFromPulldown(pulldown, val)));
                } else {
                  copy.find('option').eq(copyIndex).before($('<option>').html(getNameFromPulldown(pulldown, val)).val(val));
                }
              }
            }
          );
        }
      }

      // 各プルダウンにて選択されている値を全て取得するメソッド
      function getAllValue(table) {
        var selected = [];
        table.each(
          function(index, element) {
            val = $(element).find('option:selected').val();
            if(val) selected.push(val);
          }
        );
        return selected;
      }

      // 指定された値の次の値を取得
      function getNextValue(pulldown, value) {
        return $.map(pulldown.find('option'),
          function(option) {
            if(option.value > value) return option.value;
          }
        )[0];
      }

      // 選択されている値が何番目のoptionか取得するメソッド
      function getIndexSelectedValue(pulldown, value) {
        var count = 0; // 空白
        pulldown.find('option').each(
          function(index, element) {
            if($(element).val() == value) count = index;
          }
        );
        return count;
      }

      // デフォルトのプルダウンから名前を取得するメソッド
      function getNameFromPulldown(pulldown, employeeNumber) {
        return pulldown.find('option[value='+employeeNumber+']').text();
      }

    }
  );

</script>

<div>
  <h3 style="float:left;">案件情報更新</h3>
  <h4 style="float:right;"><p style="color:red;">※　必須項目</p></h4>
</div>

<%= form_with url: project_confirm_path, method:"post", local: true, class:"search_form" do |f| %>

  <input type="hidden" name="projectId" value="<%= @project.project_id %>">

  <table id="new" style="margin-top:75px;">
    <tr>
      <th style="width:250px;">案件ID</th>
      <td style="text-align:left; font-size:25px; font-weight:700;"><%= @project.project_id %></td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">案件名</p>
          <p style="color:red; float:left;">※</p>
        </div>
      </th>
      <td>
        <%= f.text_field :projectName, value: @project.project_name, class: 'form-control', :id=>"projectName" %>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">案件内容</p>
          <p style="color:red; float:left;">※</p>
        </div>
      </th>
      <td>
        <%= f.text_area :content, value: @project.content, class: 'form-control', :id=>"content" %>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">環境</p>
        </div>
      </th>
      <td>
        <%= f.text_area :environment, value: @project.environment, class: 'form-control', :id=>"environment" %>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">作業場所</p>
          <p style="color:red; float:left;">※</p>
        </div>
      </th>
      <td>
        <%= f.text_field :workingPlace, value: @project.working_place, class: 'form-control', :id=>"workingPlace", :style=>"width:60%;" %>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">単価</p>
          <p style="color:red; float:left;">※（どちらか）</p>
        </div>
      </th>
      <td>
        <div>
          <%= f.text_field :priceMin, value: @project.price_min, class: 'form-control', :id=>"priceMin", :style=>"width:20%; float: left;" %>
          <p id="price">円　～　</p>
          <%= f.text_field :priceMax, value: @project.price_max, class: 'form-control', :id=>"priceMax", :style=>"width:20%; float: left;" %>
          <p id="price">円</p>
        </div>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">精算幅</p>
          <p style="color:red; float:left;">※</p>
        </div>
      </th>
      <td>
        <div>
          <%= f.text_field :hourMin, value: @project.min, class: 'form-control', :id=>"hourMin", :style=>"width:10%; float: left;" %>
          <p id="time">H　～　</p>
          <%= f.text_field :hourMax, value: @project.max, class: 'form-control', :id=>"hourMax", :style=>"width:10%; float: left;" %>
          <p id="time">H</p>
        </div>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">案件開始日</p>
          <p style="color:red; float:left;">※</p>
        </div>
      </th>
      <td>
        <div>
          <%= f.collection_select :start_year, getStartOrEndYearMap(@project.start_date), :first, :last,
            { include_blank: true, selected: getThree(@project.start_date, 'first').to_i }, class: 'form-control', 
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
            <p id="date"> 年 </p>
          <%= f.collection_select :start_month, getMonthMap, :first, :last,
            { include_blank: true, selected: getThree(@project.start_date, 'second').to_i }, class: 'form-control', 
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
            <p id="date"> 月 </p>
          <%= f.collection_select :start_day, getDayMap, :first, :last,
            { include_blank: true, selected: getThree(@project.start_date, 'third').to_i }, class: 'form-control', 
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
            <p id="date"> 日 </p>
        </div>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">案件終了予定日</p>
        </div>
      </th>
      <td>
        <div>
          <%= f.collection_select :end_year, getStartOrEndYearMap(@project.end_date, params[:id]), :first, :last,
            { include_blank: true, selected: getThree(@project.end_date, 'first').to_i }, class: 'form-control', 
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
            <p id="date"> 年 </p>
          <%= f.collection_select :end_month, getMonthMap, :first, :last,
            { include_blank: true, selected: getThree(@project.end_date, 'second').to_i }, class: 'form-control', 
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
            <p id="date"> 月 </p>
          <%= f.collection_select :end_day, getDayMap, :first, :last,
            { include_blank: true, selected: getThree(@project.end_date, 'third').to_i }, class: 'form-control', 
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
            <p id="date"> 日 </p>
        </div>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">時間</p>
        </div>
      </th>
      <td>
        <div>
          <%= f.collection_select :time_from_hour, getHourMap, :first, :last,
            { include_blank: true, selected: getTwo(@project.start_time, 'first') }, class: 'form-control',
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
            <p id="time"> ： </p>
          <%= f.collection_select :time_from_minites, getMinutesMap, :first, :last,
            { include_blank: true, selected: getTwo(@project.start_time, 'second') }, class: 'form-control',
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
            <p id="time"> ～ </p>
          <%= f.collection_select :time_to_hour, getHourMap, :first, :last,
            { include_blank: true, selected: getTwo(@project.end_time, 'first') }, class: 'form-control',
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
            <p id="time"> ： </p>
          <%= f.collection_select :time_to_minites, getMinutesMap, :first, :last,
            { include_blank: true, selected: getTwo(@project.end_time, 'second') }, class: 'form-control',
              :style=>"float:left; margin-bottom:0px; width:15%;" %>
        </div>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">備考</p>
        </div>
      </th>
      <td>
        <%= f.text_area :description, value: @project.description, class: 'form-control', :id=>"description" %>
      </td>
    </tr>
    <tr>
      <th>
        <div style="display:inline-flex; vertical-align:sub;">
          <p style="float:left;">必須スキル</p>
          <p style="color:red; float:left;">※</p>
        </div>
      </th>
      <td id="must">
        <div style="text-align:left;">
          <div id="addMust" class="btn btn-primary">必須スキル追加</div>
        </div>
        <div id="mustSkill" style="text-align:left; margin-top:10px;">
          <% @must.each_with_index do |m, index| %>
            <div class="btn btn-primary">
              <%= getSkillName(m.must_skill_id) %>
              <input type="hidden" name="mustSkill[]" value="<%= m.must_skill_id %>">
            </div>
          <% end %>
        </div>
        <div id="select" style="display:none;">
          <%= f.collection_select :skill, @skills, :first, :last,
            { include_blank: true }, class: 'form-control', :id=>"mustSelect",
              :style=>"float:left; margin-top:15px; width:50%;" %>
        </div>
      </td>
    </tr>
    <tr>
      <th>尚可スキル</th>
      <td id="want">
        <div style="text-align:left;">
          <div id="addWant" class="btn btn-primary">尚可スキル追加</div>
        </div>
        <div id="wantSkill" style="text-align:left; margin-top:10px;">
          <% @want.each_with_index do |m, index| %>
            <div class="btn btn-primary">
              <%= getSkillName(m.want_skill_id) %>
              <input type="hidden" name="wantSkill[]" value="<%= m.want_skill_id %>">
            </div>
          <% end %>
        </div>
        <div id="select" style="display:none;">
          <%= f.collection_select :skill, @skills, :first, :last,
            { include_blank: true }, class: 'form-control', :id=>"wantSelect",
              :style=>"float:left; margin-top:15px; width:50%;" %>
        </div>
      </td>
    </tr>
    <tr>
      <th>参画メンバー</th>
      <td id="joinAble">
        <div id="joinAbleButton" class="btn btn-primary" style="width:100%;">参画メンバー入力</div>
        <div id="joinAbleFlame" style="display:none;">
          <div id="add" class="btn btn-danger" style="float:left; margin:10px 0px;">参画メンバー枠追加</div>
          <% if @joinEngineer.present? %>
            <% @joinEngineer.each do |je| %>
              <table id="withMember" style="margin-top:10px;">
                <tr>
                  <th width="150px" style="text-align:left;">参画メンバー</th>
                  <td id="name" style="text-align:left; font-weight:700;">
                    <%= getUser(je.employee_number).name %>
                    <input type="hidden" name="alreadyId" value="<%= je.employee_number %>">
                  </td>
                </tr>
                <tr>
                  <th width="150px" style="text-align:left;">参画開始日</th>
                  <td id="date" width="345px" style="text-align:left; font-weight:700; font-size:14px;">
                    <%= Date.parse(je.start_date).strftime("%Y年%-m月%-d日") %>
                    <input type="hidden" name="alreadyDate" value="<%= je.start_date %>">
                  </td>
                  <td>
                    <div id="del" class="btn btn-danger" style="float:left; margin:10px 0px;">削除</div>
                  </td>
                </tr>
              </table>
            <% end %>
          <% end %>
          <table class="new" style="margin-top:10px; display:none;">
            <tr id="row">
              <th width="150px" style="text-align:left;">参画メンバー</th>
              <td style="text-align:left;">
                <%= f.collection_select "joinAbleEngineer", @joinAbleEngineer, :first, :last,
                  { include_blank: true }, class: 'form-control', :id=>"joinAbleEngineer",
                    :style=>"margin-bottom:0px; width:85%;" %>
              </td>
            </tr>
            <tr>
              <th width="150px" style="text-align:left;">参画開始日</th>
              <td style="text-align:left;">
                <%= f.date_field "", class: 'form-control', :style=>"width:85%;" %>
              </td>
              <td>
                <div id="del" class="btn btn-danger" disabled=true style="float:left; margin:10px 0px;">削除</div>
              </td>
            </tr>
          </table>
        </div>
      </td>
    </tr>
  </table>

  <input type="submit" class="btn btn-primary" value="<%= yield(:button_text) %>"
    style="width:50%; margin:auto; margin-top:50px; display:block;" onClick="return check();"></input>

<% end %>